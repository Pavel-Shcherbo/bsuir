CC = gcc
DEBUG_FLAGS = -g -ggdb -std=c11 -pedantic -W -Wall -Wextra
RELEASE_FLAGS = -std=c11 -pedantic -W -Wall -Wextra -Werror
SRC_DIR = src
BUILD_DIR = build
DEBUG_BUILD_DIR = $(BUILD_DIR)/debug
RELEASE_BUILD_DIR = $(BUILD_DIR)/release

CLIENT_SRC = $(SRC_DIR)/Client.c
SERVER_SRC = $(SRC_DIR)/Server.c
HEADER_FILES = $(wildcard $(SRC_DIR)/*.h)

DEBUG_CLIENT_OBJ = $(patsubst $(SRC_DIR)/%.c,$(DEBUG_BUILD_DIR)/%.o,$(CLIENT_SRC))
RELEASE_CLIENT_OBJ = $(patsubst $(SRC_DIR)/%.c,$(RELEASE_BUILD_DIR)/%.o,$(CLIENT_SRC))
DEBUG_SERVER_OBJ = $(patsubst $(SRC_DIR)/%.c,$(DEBUG_BUILD_DIR)/%.o,$(SERVER_SRC))
RELEASE_SERVER_OBJ = $(patsubst $(SRC_DIR)/%.c,$(RELEASE_BUILD_DIR)/%.o,$(SERVER_SRC))

DEBUG_CLIENT_EXEC = $(DEBUG_BUILD_DIR)/Client
RELEASE_CLIENT_EXEC = $(RELEASE_BUILD_DIR)/Client
DEBUG_SERVER_EXEC = $(DEBUG_BUILD_DIR)/Server
RELEASE_SERVER_EXEC = $(RELEASE_BUILD_DIR)/Server

.PHONY: all clean

all: debug release

debug: $(DEBUG_CLIENT_EXEC) $(DEBUG_SERVER_EXEC)

release: $(RELEASE_CLIENT_EXEC) $(RELEASE_SERVER_EXEC)

$(DEBUG_BUILD_DIR):
	mkdir -p $@

$(RELEASE_BUILD_DIR):
	mkdir -p $@

$(DEBUG_CLIENT_OBJ): $(CLIENT_SRC) $(HEADER_FILES)
	$(CC) $(DEBUG_FLAGS) -c $< -o $@

$(RELEASE_CLIENT_OBJ): $(CLIENT_SRC) $(HEADER_FILES)
	$(CC) $(RELEASE_FLAGS) -c $< -o $@

$(DEBUG_SERVER_OBJ): $(SERVER_SRC) $(HEADER_FILES)
	$(CC) $(DEBUG_FLAGS) -c $< -o $@

$(RELEASE_SERVER_OBJ): $(SERVER_SRC) $(HEADER_FILES)
	$(CC) $(RELEASE_FLAGS) -c $< -o $@

$(DEBUG_CLIENT_EXEC): $(DEBUG_BUILD_DIR) $(DEBUG_CLIENT_OBJ)
	$(CC) $(DEBUG_FLAGS) $(DEBUG_CLIENT_OBJ) -o $@

$(RELEASE_CLIENT_EXEC): $(RELEASE_BUILD_DIR) $(RELEASE_CLIENT_OBJ)
	$(CC) $(RELEASE_FLAGS) $(RELEASE_CLIENT_OBJ) -o $@

$(DEBUG_SERVER_EXEC): $(DEBUG_BUILD_DIR) $(DEBUG_SERVER_OBJ)
	$(CC) $(DEBUG_FLAGS) $(DEBUG_SERVER_OBJ) -o $@

$(RELEASE_SERVER_EXEC): $(RELEASE_BUILD_DIR) $(RELEASE_SERVER_OBJ)
	$(CC) $(RELEASE_FLAGS) $(RELEASE_SERVER_OBJ) -o $@

clean:
	rm -rf $(BUILD_DIR)
